name: Build AMI Packer

on:
  push:
    branches:
      - main

jobs:
  ami-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Setup Environment Variables
      #   run: |
      #     touch .env
      #     echo "MYSQL_DATABASE=${{vars.MYSQL_DATABASE}}" >> .env
      #     echo "MYSQL_PASSWORD=${{vars.MYSQL_PASSWORD}}" >> .env
      #     echo "MYSQL_USER=root" >> .env

      - name: Create Zip Archive
        run: |
          zip -r Yash_Bhatia_002791499_03.zip .

      - name: Build AMI
        run: |
          packer init ./packer/ami.us-east-1.pkr.hcl
          packer fmt ./packer/ami.us-east-1.pkr.hcl
          packer validate ./packer/ami.us-east-1.pkr.hcl
          packer build ./packer/ami.us-east-1.pkr.hcl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup demo credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID_DEMO}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY_DEMO}}
          aws-region: us-east-1
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Get latest ami id
        run: |
          LATEST_AMI_ID=$(aws ec2 describe-images --filters "Name=state,Values=available" --query 'sort_by(Images, &CreationDate)[-1].ImageId' --output text)
          echo "LATEST_AMI_ID=$LATEST_AMI_ID" >> $GITHUB_ENV
      - name: Get latest launch template id
        run: |
          LATEST_LT_ID=$(aws ec2 describe-launch-templates --query 'sort_by(LaunchTemplates, &CreateTime)[-1].LaunchTemplateId' --output text)
          echo "LATEST_LT_ID=$LATEST_LT_ID" >> $GITHUB_ENV
      - name: Get latest launch template version
        run: |
          LATEST_VERSION=$(aws ec2 describe-launch-templates --launch-template-ids $LATEST_LT_ID --query 'LaunchTemplates[0].LatestVersionNumber' --output text)
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
      - run: |
          echo "{"ImageId":\"$LATEST_AMI_ID\"}"
          echo $LATEST_AMI_ID
      - name: Create a new version of the Launch Template
        run: aws ec2 create-launch-template-version --launch-template-id $LATEST_LT_ID --source-version $LATEST_VERSION --launch-template-data "{\"ImageId\":\"$LATEST_AMI_ID\"}"
      - name: Start instance fresh
        run: aws autoscaling start-instance-refresh --auto-scaling-group-name myAutoScalingGroup-3100535