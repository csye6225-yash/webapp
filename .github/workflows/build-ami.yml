name: Build AMI Packer

on:
  push:
    branches:
      - main

jobs:
  ami-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Setup Environment Variables
      #   run: |
      #     touch .env
      #     echo "MYSQL_DATABASE=${{vars.MYSQL_DATABASE}}" >> .env
      #     echo "MYSQL_PASSWORD=${{vars.MYSQL_PASSWORD}}" >> .env
      #     echo "MYSQL_USER=root" >> .env

      - name: Create Zip Archive
        run: |
          zip -r Yash_Bhatia_002791499_03.zip .

      - name: Build AMI
        run: |
          packer init ./packer/ami.us-east-1.pkr.hcl
          packer fmt ./packer/ami.us-east-1.pkr.hcl
          packer validate ./packer/ami.us-east-1.pkr.hcl
          packer build ./packer/ami.us-east-1.pkr.hcl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create Launch Template Version
        run: |
          latest_ami_id=$(aws ec2 describe-images --filters "Name=name,Values=YourAMIName" --query 'Images | [0].ImageId' --output text)
          aws ec2 create-launch-template-version --launch-template-name YourLaunchTemplateName --version-description "New version with latest AMI" --source-version $latest_ami_id

      - name: Issue Instance Refresh
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name YourAutoScalingGroupName --preferences "MinHealthyPercentage=100,InstanceWarmup=300"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}

      - name: Wait for Instance Refresh
        run: |
          status=""
          while [[ "$status" != "Successful" ]]; do
            sleep 60
            status=$(aws autoscaling describe-instance-refreshes --auto-scaling-group-name YourAutoScalingGroupName --query 'InstanceRefreshes[0].Status' --output text)
          done